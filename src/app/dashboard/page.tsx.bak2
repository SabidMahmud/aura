// app/dashboard/page.tsx
'use client';

import { useEffect, useState } from 'react';
import { useSession } from 'next-auth/react';
import { useSearchParams } from 'next/navigation';

export default function DashboardPage() {
  const { data: session, status, update } = useSession({ required: true });
  const searchParams = useSearchParams();
  const [showWelcome, setShowWelcome] = useState(false);
  const [isUpdatingSession, setIsUpdatingSession] = useState(false);

  useEffect(() => {
    const handleOnboardingComplete = async () => {
      const onboardingParam = searchParams.get('onboarding');
      const verifyParam = searchParams.get('verify');
      
      if (onboardingParam === 'complete') {
        console.log('üéâ Onboarding completion detected!');
        setShowWelcome(true);
        
        // Clean up the bypass cookie since we're now on the dashboard
        document.cookie = 'onboarding-complete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';
        console.log('üßπ Cleaned up bypass cookie');
        
        // Update the session to ensure JWT has latest data
        if (!session?.user?.isOnboardingComplete) {
          console.log('üîÑ Session still shows incomplete, forcing update...');
          setIsUpdatingSession(true);
          try {
            await update();
            console.log('‚úÖ Session updated after onboarding');
          } catch (error) {
            console.error('‚ùå Failed to update session:', error);
          } finally {
            setIsUpdatingSession(false);
          }
        }
        
        // Clean up URL parameters
        const url = new URL(window.location.href);
        url.searchParams.delete('onboarding');
        url.searchParams.delete('verify');
        window.history.replaceState({}, '', url.pathname + url.search);
      }
      
      if (verifyParam === 'true') {
        console.log('üîç Dashboard verification mode');
        // This could be used for additional verification logic if needed
        // For now, just clean up the parameter
        const url = new URL(window.location.href);
        url.searchParams.delete('verify');
        window.history.replaceState({}, '', url.pathname + url.search);
      }
    };

    if (status === 'authenticated') {
      handleOnboardingComplete();
    }
  }, [searchParams, session, status, update]);

  if (status === 'loading' || isUpdatingSession) {
    return (
      <div className="flex min-h-screen items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto"></div>
          <p className="mt-4 text-gray-600">
            {isUpdatingSession ? 'Updating your session...' : 'Loading dashboard...'}
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {showWelcome && (
        <div className="bg-green-50 border-l-4 border-green-400 p-4 mb-6">
          <div className="flex">
            <div className="flex-shrink-0">
              <svg className="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
              </svg>
            </div>
            <div className="ml-3">
              <p className="text-sm text-green-700">
                üéâ Welcome to Aura! Your onboarding is complete and your account is all set up.
              </p>
            </div>
            <div className="ml-auto pl-3">
              <button
                onClick={() => setShowWelcome(false)}
                className="text-green-400 hover:text-green-600"
              >
                <span className="sr-only">Dismiss</span>
                <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clipRule="evenodd" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      )}

      <div className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div className="px-4 py-6 sm:px-0">
          <div className="border-4 border-dashed border-gray-200 rounded-lg h-96 flex items-center justify-center">
            <div className="text-center">
              <h1 className="text-3xl font-bold text-gray-900 mb-4">
                Welcome to your Dashboard, {session?.user?.name || 'User'}!
              </h1>
              <p className="text-gray-600 mb-4">
                Onboarding Status: {session?.user?.isOnboardingComplete ? '‚úÖ Complete' : '‚è≥ Pending'}
              </p>
              <p className="text-gray-500">
                Your personalized dashboard content will appear here.
              </p>
              
              {/* Debug info - remove in production */}
              {process.env.NODE_ENV === 'development' && (
                <div className="mt-8 p-4 bg-gray-100 rounded-lg text-left text-sm">
                  <h3 className="font-bold mb-2">Debug Info:</h3>
                  <pre className="whitespace-pre-wrap">
                    {JSON.stringify({
                      userId: session?.user?.id,
                      email: session?.user?.email,
                      isOnboardingComplete: session?.user?.isOnboardingComplete,
                      timezone: session?.user?.timezone
                    }, null, 2)}
                  </pre>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}