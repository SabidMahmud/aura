// app/onboarding/page.tsx
'use client';

import { useEffect } from 'react';
import { useSession } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import OnboardingFlow from '@/components/onboarding/Onboardingflow';

export default function OnboardingPage() {
  const { data: session, status } = useSession();
  const router = useRouter();

  useEffect(() => {
    // If the session is still loading, wait.
    if (status === 'loading') {
      return;
    }

    // If the user is not logged in, redirect them.
    if (status === 'unauthenticated') {
      router.replace('/login');
      return;
    }

    // If the user is logged in AND has already completed onboarding,
    // redirect them to the main dashboard.
    if (session?.user?.isOnboardingComplete) {
      router.replace('/dashboard');
    }
  }, [status, session, router]);

  // Show a loading indicator while the session is being verified.
  if (status === 'loading') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading...</p>
        </div>
      </div>
    );
  }

  // Render the onboarding flow only if the user is authenticated
  // and has NOT completed onboarding.
  if (status === 'authenticated' && !session.user.isOnboardingComplete) {
    return <OnboardingFlow />;
  }

  // In all other cases (like being redirected), render nothing.
  return null;
}